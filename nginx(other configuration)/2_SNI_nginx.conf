
user root;
worker_processes auto;

error_log /var/log/nginx/error.log;

pid /run/nginx.pid;

events {
    worker_connections 1024;
}
#以下为SNI分流配置：（示例仅配置了两个域名的SNI分流；如需要多个域名，增加对应参数即可。）
stream {
    map $ssl_preread_server_name $backend_name {
        zv.xx.yy  vless; #zv.xx.yy更改为自己分流的域名
        zh.xx.yy  http2; #zh.xx.yy更改为自己分流的域名
    }

    upstream vless { #vless与上对应
        server unix:/dev/shm/vless.sock; #转给vless应用的监听进程
    }

    upstream http2 { #http2与上对应
        server unix:/dev/shm/http2.sock; #转给http2应用的监听进程
    }

    server {
        listen 443; #IPv4,tcp 443监听端口。
        listen [::]:443; #IPv6,tcp 443监听端口。无IPv6,此项可以删除。
        ssl_preread on;
        proxy_protocol on; #启用PROXY protocol发送（选配参数）。此参数是全局模式，故若有接受端不支持PROXY protocol，就不要启用！
        proxy_pass $backend_name;
    }
} #SNI分流配置到此结束
#在如下http中添加对应网站的应用配置参数（可配置多个网站，必须与上对应。）
http {
#.........<省略>........
    server {
        listen unix:/dev/shm/http2.sock ssl http2 proxy_protocol; #http/2 server进程，并启用PROXY protocol（与上对应，否则删除此参数！）接受。
        set_real_ip_from unix:; #启用PROXY protocol接受配置此参数，否则删除。
        server_name zh.xx.yy; #zh.xx.yy修改成自己的域名（与上对应）

        ssl_certificate /home/tls/zh.xx.yy/zh.xx.yy.crt; #换成自己的证书，绝对路径。
        ssl_certificate_key /home/tls/zh.xx.yy/zh.xx.yy.key; #换成自己的密钥，绝对路径。

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3; #TLSv1.3可能需要源码编译才支持，见此部分README.md说明。
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;
        
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用HSTS
        location / {
            root /var/www/html; #更改为自己存放的web文件路径
            index index.html index.htm;
        }
    }
}
