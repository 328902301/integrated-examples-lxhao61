
user  root;
worker_processes auto;

error_log  /var/log/nginx/error.log;

pid       /run/nginx.pid;

events {
    worker_connections 1024;
}

stream {
    map $ssl_preread_server_name $backend_name {
        z1.xx.yy hs1; #z1.xx.yy修改成自己规划对应http/1.1域名
        z2.xx.yy hs2; #z2.xx.yy修改成自己规划对应http/2域名
    }

    upstream hs1 {
        server unix:/dev/shm/https1.sock; #对应http/1.1域名的监听进程
    }

    upstream hs2 {
        server unix:/dev/shm/https2.sock; #对应http/2域名的监听进程
    }

    server {
        listen 443; #IPv4,tcp 443监听端口。
        listen [::]:443; #IPv6,tcp 443监听端口。无IPv6,此项可以删除。
        ssl_preread on;
        proxy_pass  $backend_name;
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80; #IPv4,http默认监听端口。
        listen [::]:80; #IPv6,http默认监听端口。无IPv6,此项可以删除。
        return 301 https://$host$request_uri; #http自动跳转https,让网站看起来更真实。
    }

    server {
        listen unix:/dev/shm/https1.sock ssl; #IPv4,https监听进程，http/1.1模式。
        server_name z1.xx.yy; #修改成自己的域名

        ssl_certificate /etc/ssl/tls/xx.yy.crt; #换成你的证书，绝对路径。
        ssl_certificate_key /etc/ssl/tls/xx.yy.key; #换成你的私钥，绝对路径。

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_session_tickets  off;

        ssl_protocols TLSv1.2 TLSv1.3; #TLSv1.3可能需要源码编译才支持，见此部分README.md说明。
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;

        location = /HALdGZ9k { #分流出ws,与本机v2ray path对应。
            proxy_redirect off;
            proxy_pass http://127.0.0.1:2001; #转发给本机v2ray对应端口
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location = /ss1v2ray { #分流出ws,与本机v2ray path对应。
            proxy_redirect off;
            proxy_pass http://127.0.0.1:2002; #转发给本机v2ray对应端口
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用HSTS
        location / {
            root /var/www/html/; #修改成自己存放的web文件路径
            index index.html;
        }
    }

    server {
        listen unix:/dev/shm/https2.sock ssl http2; #IPv4,https监听进程，http/2模式。
        server_name z2.xx.yy; #修改成自己的域名

        ssl_certificate /etc/ssl/tls/xx.yy.crt; #换成你的证书，绝对路径。
        ssl_certificate_key /etc/ssl/tls/xx.yy.key; #换成你的私钥，绝对路径。

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_session_tickets  off;

        ssl_protocols TLSv1.2 TLSv1.3; #TLSv1.3可能需要源码编译才支持，见此部分README.md说明。
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;

        location /cdngrpc { #与本机v2ray serviceName对应
            grpc_pass grpc://127.0.0.1:2009; #转发给本机v2ray对应端口
        }

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用HSTS
        location / {
            root /var/www/html/; #修改成自己存放的web文件路径
            index  index.html index.htm;
        }
    }
}
